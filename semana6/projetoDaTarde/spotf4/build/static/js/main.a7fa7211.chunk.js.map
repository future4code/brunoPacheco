{"version":3,"sources":["components/title/index.js","components/playlistDetails/index.js","components/playlist/index.js","components/inputSongPlaylist/index.js","components/createPlaylist/index.js","App.js","serviceWorker.js","index.js"],"names":["Titulo","styled","div","Title","props","state","React","Component","PlaylistDetails","playlist","rock","name","song","url","samba","playlistDetail","this","map","item","Container","Playlist","listaDePlaylist","InputSongPlaylist","type","placeholder","CreatePlaylist","Spotf4Container","Header","UserContainer","SectionA","SectionB","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iYAKA,IAAMA,EAASC,IAAOC,IAAV,KAoBGC,E,YAdX,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAM,GAFG,E,sEAMd,OACI,kBAACL,EAAD,KACI,2C,GATIM,IAAMC,WCiCXC,E,YAnCX,WAAYJ,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAM,CACPI,SAAS,CACL,CACIC,KAAK,CAAC,CACFC,KAAK,UACLC,KAAK,QACLC,IAAI,wCAGZ,CACIC,MAAM,CAAC,CACHH,KAAK,WACLC,KAAK,QACLC,IAAI,2CAfN,E,sEAuBd,IAAME,EAAiBC,KAAKX,MAAMI,SAASQ,KAAI,SAACC,GAC5C,OAAO,4BAAMA,EAAKP,KAAO,IAAMO,EAAKN,SAExC,OACI,6BACI,oDACA,4BAAKG,Q,GA9BST,IAAMC,W,uHCFpC,IAAMY,EAAYlB,IAAOC,IAAV,KAiCAkB,E,YA3BX,WAAYhB,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAM,CACPI,SAAS,CACL,CACIC,KAAK,GACLI,MAAM,MANJ,E,sEAad,IAAMO,EAAkBL,KAAKX,MAAMI,SAASQ,KAAI,SAACC,GAC7C,OAAO,4BAAMA,MAEjB,OACI,kBAACC,EAAD,KACI,wCACA,4BACME,Q,GArBCf,IAAMC,W,sHCL7B,IAAMY,EAAYlB,IAAOC,IAAV,KA+BAoB,E,YAzBX,WAAYlB,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAM,GAFG,E,sEAMd,OACI,kBAAC,EAAD,KACI,mDACA,qDACA,gCACI,kCAEJ,qDACA,2BAAOkB,KAAK,SACZ,sDACA,2BAAOA,KAAK,SACZ,sDACA,2BAAOA,KAAK,OAAOC,YAAY,QAC/B,+C,GApBgBlB,IAAMC,W,sHCLtC,IAAMY,EAAYlB,IAAOC,IAAV,KAwBAuB,E,YAlBX,WAAYrB,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAM,GAFG,E,sEAOd,OACI,kBAAC,EAAD,KACI,+CACA,oDACA,2BAAOkB,KAAK,SACZ,uD,GAbajB,IAAMC,W,u0BCFnC,IAAMmB,EAAkBzB,IAAOC,IAAV,KAQfyB,EAAQ1B,IAAOC,IAAT,KAMN0B,EAAgB3B,IAAOC,IAAV,KAMb2B,EAAW5B,IAAOC,IAAV,KAMR4B,EAAW7B,IAAOC,IAAV,KA2BC6B,MApBf,WACE,OACE,kBAACL,EAAD,KACE,kBAACC,EAAD,KACG,kBAAC,EAAD,OAEH,kBAACC,EAAD,KACI,kBAACC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAACC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,UC1CQE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.a7fa7211.chunk.js","sourcesContent":["import React from'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport props from 'prop-types';\r\n\r\nconst Titulo = styled.div`\r\n    justify-items: center;\r\n    align-items: center;\r\n`\r\n\r\nclass Title extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={}\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Titulo>\r\n                <h1>Spotf4</h1>\r\n            </Titulo>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Title;","import React from'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport props from 'prop-types';\r\n\r\n\r\n\r\nclass PlaylistDetails extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            playlist:[\r\n                {\r\n                    rock:[{\r\n                        name:\"artist1\",\r\n                        song:\"song1\",\r\n                        url:\"http://spoti4.future4.com.br/1.mp3\"\r\n                    }]\r\n                },\r\n                {\r\n                    samba:[{\r\n                        name:\"artista1\",\r\n                        song:\"song1\",\r\n                        url:\"http://spoti4.future4.com.br/10.mp3\"\r\n                    }]\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const playlistDetail = this.state.playlist.map((item)=>{\r\n            return <li>{ item.name + \" \" + item.song}</li>\r\n        })\r\n        return(\r\n            <div>\r\n                <h1>Detalhes da Playlist</h1>\r\n                <ul>{playlistDetail}</ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlaylistDetails;","import React from'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport props from 'prop-types';\r\n\r\nconst Container = styled.div`\r\n    border: 1px solid white;\r\n    width:800px;\r\n`\r\n\r\nclass Playlist extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            playlist:[\r\n                {\r\n                    rock:[],\r\n                    samba:[],\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const listaDePlaylist = this.state.playlist.map((item)=>{\r\n            return <li>{ item }</li>\r\n        })\r\n        return(\r\n            <Container>\r\n                <h2>Playlist</h2>\r\n                <ul>\r\n                    { listaDePlaylist }\r\n                </ul>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Playlist;","import React from'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport props from 'prop-types';\r\n\r\nconst Container = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n`\r\n\r\nclass InputSongPlaylist extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={}\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Container>\r\n                <h1>Input Song Playlist</h1>\r\n                <label>Escolha a playlist</label>\r\n                <select>\r\n                    <option>{}</option>\r\n                </select>\r\n                <label>Artista ou banda: </label>\r\n                <input type=\"text\" />\r\n                <label>Nome da música: </label>\r\n                <input type=\"text\" />\r\n                <label>Inserir música: </label>\r\n                <input type=\"text\" placeholder=\"URL\" />\r\n                <button >Salvar</button>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputSongPlaylist;","import React from'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport props from 'prop-types';\r\n\r\nconst Container = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n`\r\n\r\nclass CreatePlaylist extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Container>\r\n                <h1>Create Playlist</h1>\r\n                <label>Nome da playlist </label>\r\n                <input type=\"text\" />\r\n                <button >Criar playlist</button>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreatePlaylist;","import React from 'react';\nimport styled from 'styled-components';\nimport Title from './components/title';\nimport PlayListDetails from './components/playlistDetails'\nimport PlayList from './components/playlist'\nimport InputSongPlayList from './components/inputSongPlaylist'\nimport CreatePlayList from './components/createPlaylist'\n\nconst Spotf4Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: gray ;\n`\n\nconst Header =styled.div`\n  width: 100%;\n  background-color: orange;\n  justify-content: center;\n  align-items: center;\n`\nconst UserContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid white;\n`\n\nconst SectionA = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 1300px;\n  justify-content: space-between;\n`\nconst SectionB = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 1300px;\n  justify-content:space-between;\n`\n\nfunction App() {\n  return (\n    <Spotf4Container>\n      <Header>\n         <Title />\n      </Header>\n      <UserContainer>\n          <SectionA>\n            <PlayList />\n            <CreatePlayList />\n          </SectionA>\n          <SectionB>\n            <PlayListDetails />\n            <InputSongPlayList />\n          </SectionB>\n      </UserContainer>\n    </Spotf4Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}